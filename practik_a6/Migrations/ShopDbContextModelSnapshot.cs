// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using practik_a6;

#nullable disable

namespace practik_a6.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("ProductShop");
                });

            modelBuilder.Entity("practik_a6.entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "category1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "category2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "category3"
                        });
                });

            modelBuilder.Entity("practik_a6.entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "city1"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "city2"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "city3"
                        });
                });

            modelBuilder.Entity("practik_a6.entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "country1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "country2"
                        });
                });

            modelBuilder.Entity("practik_a6.entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "position1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "position2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "position3"
                        });
                });

            modelBuilder.Entity("practik_a6.entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Discount = 5f,
                            IsInStock = true,
                            Name = "product1",
                            Price = 45m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Discount = 2f,
                            IsInStock = true,
                            Name = "product2",
                            Price = 31m,
                            Quantity = 34
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Discount = 4f,
                            IsInStock = false,
                            Name = "product3",
                            Price = 54m,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("practik_a6.entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "address1",
                            CityId = 2,
                            Name = "shop1",
                            ParkingArea = 60
                        },
                        new
                        {
                            Id = 2,
                            Address = "address2",
                            CityId = 1,
                            Name = "shop2",
                            ParkingArea = 20
                        },
                        new
                        {
                            Id = 3,
                            Address = "address3",
                            CityId = 3,
                            Name = "shop3",
                            ParkingArea = 150
                        });
                });

            modelBuilder.Entity("practik_a6.entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "email1",
                            Name = "worker1",
                            PhoneNumber = "phone number1",
                            PositionId = 1,
                            Salary = 4500m,
                            ShopId = 3,
                            SurName = "surname1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "email2",
                            Name = "worker2",
                            PhoneNumber = "phone number2",
                            PositionId = 2,
                            Salary = 5700m,
                            ShopId = 2,
                            SurName = "surname2"
                        },
                        new
                        {
                            Id = 3,
                            Email = "email3",
                            Name = "worker3",
                            PhoneNumber = "phone number3",
                            PositionId = 3,
                            Salary = 6000m,
                            ShopId = 1,
                            SurName = "surname3"
                        });
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.HasOne("practik_a6.entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("practik_a6.entities.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("practik_a6.entities.City", b =>
                {
                    b.HasOne("practik_a6.entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("practik_a6.entities.Product", b =>
                {
                    b.HasOne("practik_a6.entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("practik_a6.entities.Shop", b =>
                {
                    b.HasOne("practik_a6.entities.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("practik_a6.entities.Worker", b =>
                {
                    b.HasOne("practik_a6.entities.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("practik_a6.entities.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("practik_a6.entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("practik_a6.entities.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("practik_a6.entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("practik_a6.entities.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("practik_a6.entities.Shop", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
